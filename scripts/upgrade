#!/bin/bash

# Source local helpers
source ./_common.sh

# Source app helpers
source /usr/share/yunohost/helpers

# Abort script if errors
ynh_abort_if_errors

app="kanboard"

# Set app specific variables
dbname=$app
dbuser=$app

# Source app helpers
source /usr/share/yunohost/helpers

# Retrieve settings
domain=$(ynh_app_setting_get "$app" domain)
path=$(ynh_app_setting_get "$app" path)
admin=$(ynh_app_setting_get "$app" adminusername)
email=$(yunohost user info $admin | grep mail: | sed "s/mail: //g")
dbpass=$(ynh_app_setting_get "$app" mysqlpwd)
is_public=$(ynh_app_setting_get "$app"  is_public)
if [ -z $is_public ]
then	# Old version doesnt have is_public settings
	is_public=0
	ynh_app_setting_set $app is_public $is_public
fi

# Check destination directory
DESTDIR="/var/www/$app"
[[ ! -d $DESTDIR ]] && ynh_die \
"The destination directory '$DESTDIR' does not exist.\
 The app is not correctly installed, you should remove it first."

# flush php sessions before upgrade
rm -rf /var/lib/php5/session/*

# Move old app dir
mv ${DESTDIR} ${DESTDIR}.old

ynh_setup_source "$DESTDIR"

# restore data
cp -a ${DESTDIR}.old/data ${DESTDIR}

# restore plugins
if [ -e ${DESTDIR}.old/plugins ]
then
	cp -a ${DESTDIR}.old/plugins ${DESTDIR}
fi
# delete temp directory
rm -Rf ${DESTDIR}.old

# Copy and edit config.php
cp ../conf/config.php ${DESTDIR}
sed -i "s/yuno_dbpdw/${dbpass}/g" ${DESTDIR}/config.php
sed -i "s/yuno_dbuser/${dbuser}/g" ${DESTDIR}/config.php
sed -i "s/yuno_admin/${admin}/g" ${DESTDIR}/config.php
sed -i "s/yuno_email/${email}/g" ${DESTDIR}/config.php
sed -i "s/yuno_domain/${domain}/g" ${DESTDIR}/config.php

# Set permissions to kanboard and data directory
chown -R root:root ${DESTDIR}
chown -R www-data ${DESTDIR}/{data,plugins}

# Launch database migration
${DESTDIR}/cli db:migrate

# Copy and set php-fpm configuration
phpfpm_conf="/etc/php5/fpm/pool.d/${app}.conf"
sed -i "s@#USER#@${app}@g"         ../conf/php-fpm.conf
sed -i "s@#GROUP#@${app}@g"        ../conf/php-fpm.conf
sed -i "s@#POOLNAME#@${app}@g"     ../conf/php-fpm.conf
sed -i "s@#DESTDIR#@${DESTDIR}/@g" ../conf/php-fpm.conf
cp ../conf/php-fpm.conf "$phpfpm_conf"
chown root: $phpfpm_conf
chmod 644 $phpfpm_conf

finalnginxconf="/etc/nginx/conf.d/${domain}.d/${app}.conf"

# Modify Nginx configuration file and copy it to Nginx conf directory
sed -i "s@NAMETOCHANGE@${app}@g" ../conf/nginx.conf*
sed -i "s@PATHTOCHANGE@${path}@g" ../conf/nginx.conf*
sed -i "s@ALIASTOCHANGE@${DESTDIR}/@g" ../conf/nginx.conf*
cp ../conf/nginx.conf "$finalnginxconf"

if [ "$path" == "/" ]
then
	# ynh panel is only comptable with non-root installation
	ynh_replace_string "	include conf.d/"  "	#include conf.d/"  "$finalnginxconf"
fi

# Make app public or private
if [[ "$is_public" -eq 1 ]];
then
	yunohost app setting ${app} unprotected_uris -v "/"
	sed -i "s/define('LDAP_AUTH'.*$/define('LDAP_AUTH', true);/g" ${DESTDIR}/config.php
	sed -i "s/define('HIDE_LOGIN_FORM'.*$/define('HIDE_LOGIN_FORM', false);/g" ${DESTDIR}/config.php
	sed -i "s/define('REMEMBER_ME_AUTH'.*$/define('REMEMBER_ME_AUTH', true);/g" ${DESTDIR}/config.php
	sed -i "s/define('DISABLE_LOGOUT'.*$/define('DISABLE_LOGOUT', false);/g" ${DESTDIR}/config.php
fi

# Reload services
service php5-fpm restart || true
service nginx reload || true
