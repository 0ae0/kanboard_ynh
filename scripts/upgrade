#!/bin/bash

# Source local helpers
source ./_common.sh

# Source app helpers
source /usr/share/yunohost/helpers

# Abort script if errors
ynh_abort_if_errors

app=$YNH_APP_INSTANCE_NAME

# Set app specific variables
dbname=$app
dbuser=$app

# Source app helpers
source /usr/share/yunohost/helpers

# Retrieve settings
domain=$(ynh_app_setting_get "$app" domain)
path=$(ynh_app_setting_get "$app" path)
admin=$(ynh_app_setting_get "$app" adminusername)
email=$(ynh_user_get_info "$admin" mail)
dbpass=$(ynh_app_setting_get "$app" mysqlpwd)
is_public=$(ynh_app_setting_get "$app"  is_public)
final_path=$(ynh_app_setting_get "$app" final_path)

if [ -z $is_public ]
then	# Old version doesnt have is_public settings
	is_public=0
	ynh_app_setting_set $app is_public $is_public
fi

# flush php sessions before upgrade
ynh_secure_remove /var/lib/php5/session/*

# Move old app dir
mv ${final_path} ${final_path}.old

ynh_setup_source "$final_path"

# restore data
cp -a ${final_path}.old/data ${final_path}

# restore plugins
if [ -e ${final_path}.old/plugins ]
then
	cp -a ${final_path}.old/plugins ${final_path}
fi
# delete temp directory
ynh_secure_remove "${final_path}.old"

# Copy and edit config.php
config_php=${final_path}/config.php
cp ../conf/config.php "$config_php"
ynh_replace_string "yuno_dbpdw"  "$dbpass" "$config_php"
ynh_replace_string "yuno_dbuser" "$dbuser" "$config_php"
ynh_replace_string "yuno_admin"  "$admin"  "$config_php"
ynh_replace_string "yuno_email"  "$email"  "$config_php"
ynh_replace_string "yuno_domain" "$domain" "$config_php"

# Set permissions to kanboard and data directory
chown -R root:root ${final_path}
chown -R www-data ${final_path}/{data,plugins}

# Launch database migration
${final_path}/cli db:migrate

# Copy and set php-fpm configuration
phpfpm_conf="/etc/php5/fpm/pool.d/${app}.conf"
cp ../conf/php-fpm.conf "$phpfpm_conf"

ynh_replace_string "#USER#"     "$app"        "$phpfpm_conf"
ynh_replace_string "#GROUP#"    "$app"        "$phpfpm_conf"
ynh_replace_string "#POOLNAME#" "$app"        "$phpfpm_conf"
ynh_replace_string "#DESTDIR#"  "$final_path" "$phpfpm_conf"

chown root: $phpfpm_conf
chmod 644 $phpfpm_conf

finalnginxconf="/etc/nginx/conf.d/${domain}.d/${app}.conf"
cp ../conf/nginx.conf "$finalnginxconf"

# Modify Nginx configuration file and copy it to Nginx conf directory
ynh_replace_string "NAMETOCHANGE"  "${app}"        "$finalnginxconf"
ynh_replace_string "PATHTOCHANGE"  "${path}"       "$finalnginxconf"
ynh_replace_string "ALIASTOCHANGE" "${final_path}" "$finalnginxconf"

if [ "$path" == "/" ]
then
	# ynh panel is only comptable with non-root installation
	ynh_replace_string "	include conf.d/"  "	#include conf.d/"  "$finalnginxconf"
fi

# Make app public or private
if [[ "$is_public" -eq 1 ]];
then
	ynh_app_setting_set "$app" unprotected_uris "/"
	ynh_replace_string "define('LDAP_AUTH'.*$"        "define('LDAP_AUTH', true);"        "$config_php"
	ynh_replace_string "define('HIDE_LOGIN_FORM'.*$"  "define('HIDE_LOGIN_FORM', false);" "$config_php"
	ynh_replace_string "define('REMEMBER_ME_AUTH'.*$" "define('REMEMBER_ME_AUTH', true);" "$config_php"
	ynh_replace_string "define('DISABLE_LOGOUT'.*$"   "define('DISABLE_LOGOUT', false);"  "$config_php"
fi

# Reload services
service php5-fpm restart || true
service nginx reload || true
